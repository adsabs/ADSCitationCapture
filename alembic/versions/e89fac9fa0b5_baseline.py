"""baseline

Revision ID: e89fac9fa0b5
Revises:
Create Date: 2018-10-11 16:29:43.580754

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import adsputils

# revision identifiers, used by Alembic.
revision = 'e89fac9fa0b5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('citation_changes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('new_id', sa.Integer(), nullable=True),
    sa.Column('new_citing', sa.Text(), nullable=True),
    sa.Column('new_cited', sa.Text(), nullable=True),
    sa.Column('new_doi', sa.Boolean(), nullable=True),
    sa.Column('new_pid', sa.Boolean(), nullable=True),
    sa.Column('new_url', sa.Boolean(), nullable=True),
    sa.Column('new_content', sa.Text(), nullable=True),
    sa.Column('new_resolved', sa.Boolean(), nullable=True),
    sa.Column('previous_citing', sa.Text(), nullable=True),
    sa.Column('previous_cited', sa.Text(), nullable=True),
    sa.Column('previous_doi', sa.Boolean(), nullable=True),
    sa.Column('previous_pid', sa.Boolean(), nullable=True),
    sa.Column('previous_url', sa.Boolean(), nullable=True),
    sa.Column('previous_content', sa.Text(), nullable=True),
    sa.Column('previous_resolved', sa.Boolean(), nullable=True),
    sa.Column('status', postgresql.ENUM('NEW', 'DELETED', 'UPDATED', name='citation_change_type'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('citation_target',
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('content_type', postgresql.ENUM('DOI', 'PID', 'URL', name='citation_content_type'), nullable=True),
    sa.Column('raw_cited_metadata', sa.Text(), nullable=True),
    sa.Column('parsed_cited_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('status', postgresql.ENUM('REGISTERED', 'DELETED', 'DISCARDED', name='target_status_type'), nullable=True),
    sa.Column('created', adsputils.UTCDateTime(timezone=True), nullable=True),
    sa.Column('updated', adsputils.UTCDateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('content'),
    schema='public'
    )
    op.create_table('citation_target_version',
    sa.Column('content', sa.Text(), autoincrement=False, nullable=False),
    sa.Column('content_type', postgresql.ENUM('DOI', 'PID', 'URL', name='citation_content_type', create_type=False), autoincrement=False, nullable=True),
    sa.Column('raw_cited_metadata', sa.Text(), autoincrement=False, nullable=True),
    sa.Column('parsed_cited_metadata', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('REGISTERED', 'DELETED', 'DISCARDED', name='target_status_type'), autoincrement=False, nullable=True),
    sa.Column('created', adsputils.UTCDateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated', adsputils.UTCDateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('content', 'transaction_id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_citation_target_version_end_transaction_id'), 'citation_target_version', ['end_transaction_id'], unique=False, schema='public')
    op.create_index(op.f('ix_public_citation_target_version_operation_type'), 'citation_target_version', ['operation_type'], unique=False, schema='public')
    op.create_index(op.f('ix_public_citation_target_version_transaction_id'), 'citation_target_version', ['transaction_id'], unique=False, schema='public')
    op.create_table('citation_version',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('content', sa.Text(), autoincrement=False, nullable=True),
    sa.Column('citing', sa.Text(), autoincrement=False, nullable=True),
    sa.Column('cited', sa.Text(), autoincrement=False, nullable=True),
    sa.Column('resolved', sa.Boolean(), autoincrement=False, nullable=True),
    sa.Column('timestamp', adsputils.UTCDateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('REGISTERED', 'DELETED', 'DISCARDED', name='citation_status_type'), autoincrement=False, nullable=True),
    sa.Column('created', adsputils.UTCDateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated', adsputils.UTCDateTime(timezone=True), autoincrement=False, nullable=True),
    sa.Column('transaction_id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('end_transaction_id', sa.BigInteger(), nullable=True),
    sa.Column('operation_type', sa.SmallInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'transaction_id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_citation_version_end_transaction_id'), 'citation_version', ['end_transaction_id'], unique=False, schema='public')
    op.create_index(op.f('ix_public_citation_version_operation_type'), 'citation_version', ['operation_type'], unique=False, schema='public')
    op.create_index(op.f('ix_public_citation_version_transaction_id'), 'citation_version', ['transaction_id'], unique=False, schema='public')
    op.create_table('raw_citation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bibcode', sa.String(length=19), nullable=True),
    sa.Column('payload', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='public',
    )
    op.create_table('transaction',
    sa.Column('issued_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('remote_addr', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('citation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('citing', sa.Text(), nullable=True),
    sa.Column('cited', sa.Text(), nullable=True),
    sa.Column('resolved', sa.Boolean(), nullable=True),
    sa.Column('timestamp', adsputils.UTCDateTime(timezone=True), nullable=True),
    sa.Column('status', postgresql.ENUM('REGISTERED', 'DELETED', 'DISCARDED', name='citation_status_type'), nullable=True),
    sa.Column('created', adsputils.UTCDateTime(timezone=True), nullable=True),
    sa.Column('updated', adsputils.UTCDateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['content'], ['public.citation_target.content'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('citing', 'content', name='citing_content_unique_constraint'),
    schema='public'
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('citation', schema='public')
    op.drop_table('transaction')
    op.drop_table('raw_citation', schema='public')
    op.drop_index(op.f('ix_public_citation_version_transaction_id'), table_name='citation_version', schema='public')
    op.drop_index(op.f('ix_public_citation_version_operation_type'), table_name='citation_version', schema='public')
    op.drop_index(op.f('ix_public_citation_version_end_transaction_id'), table_name='citation_version', schema='public')
    op.drop_table('citation_version', schema='public')
    op.drop_index(op.f('ix_public_citation_target_version_transaction_id'), table_name='citation_target_version', schema='public')
    op.drop_index(op.f('ix_public_citation_target_version_operation_type'), table_name='citation_target_version', schema='public')
    op.drop_index(op.f('ix_public_citation_target_version_end_transaction_id'), table_name='citation_target_version', schema='public')
    op.drop_table('citation_target_version', schema='public')
    op.drop_table('citation_target', schema='public')
    op.drop_table('citation_changes', schema='public')
    op.execute('DROP TYPE citation_content_type')
    op.execute('DROP TYPE citation_change_type')
    op.execute('DROP TYPE target_status_type')
    op.execute('DROP TYPE citation_status_type')
    # ### end Alembic commands ###
